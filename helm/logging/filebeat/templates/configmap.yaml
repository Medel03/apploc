apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.appName }}-config
  namespace: {{ .Values.namespace }}
  labels:
    k8s-app: {{ .Values.appName }}
data:
  filebeat.yml: |-
    filebeat.autodiscover:
      providers:
        - type: kubernetes
          templates:
            - condition:
                equals:
                  kubernetes.namespace: {{ .Values.appNamespace }}  # App namespace (e.g., logging)
              config:
                - type: container
                  paths:
                    - /var/log/containers/*-${data.kubernetes.pod.uid}.log  # Collect stdout/stderr logs
                  multiline.pattern: '^\['  # Optional: if your logs are multiline (adjust if needed)
                  multiline.negate: true
                  multiline.match: after

    setup.dashboards.enabled: true
    setup.kibana:
      host: {{ .Values.kibanaService }}  # Kibana service (use correct service name in values.yaml)
    output.elasticsearch:
      hosts: [{{ .Values.esService }}]  # Elasticsearch service (use correct service name in values.yaml)



